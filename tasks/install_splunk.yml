---
- name: set splunk checksum
  set_fact:
    splunk_checksum: "{{ 'sha1' if splunk_checksums[splunk_version]|length == 40 else 'sha256' }}:{{ splunk_checksums[splunk_version] }}"
  when:
    - splunk_verify_checksum|bool
    - splunk_file_checksum is not defined
    - splunk_file in splunk_checksums

- name: set local filename
  set_fact:
    splunk_filepath: /usr/local/src/{{ splunk_file }}

- name: download splunk
  get_url:
    url: "{{ splunk_download_url }}"
    dest: "{{ splunk_filepath }}"
    checksum: "{{ splunk_checksum|default(omit) }}"
    
- name: checking if splunk is installed
  stat: path={{splunk_home}}
  register: splunk_path

- name: setup admin passwords for running commands
  set_fact:
    splunk_password: "{{ splunk_users.admin.password|d('changeme') }}"
  no_log: "{{ censor_secrets|d(true) }}"
  when: "'admin' in splunk_users"

- block:
  - name: extract splunk
    unarchive:
      src: "{{ splunk_filepath }}"
      dest: /opt/
      copy: no
      owner: "{{ splunk_user }}"
      group: "{{ splunk_group }}"

  - name: hash admin password
    command: "{{ splunk_home}}/bin/splunk hash-passwd '{{ splunk_password }}'" 
    no_log: "{{ censor_secrets|d(true) }}"
    register: passw_hash
    when: "'admin' in splunk_users"

  - name: Generate user-seed.conf
    ini_file:
      owner: "{{ splunk_user }}"
      group: "{{ splunk_group }}"
      dest: "{{ splunk_home }}/etc/system/local/user-seed.conf"
      section: user_info
      option: "{{ item.opt }}"
      value: "{{ item.val }}"
    loop:
      - { opt: 'USERNAME', val: 'admin' }
      - { opt: 'HASHED_PASSWORD', val: "{{ passw_hash.stdout }}" }
    loop_control:
      label: "{{ item.opt }}"
    no_log: "{{ censor_secrets|d(true) }}"
    when: "'admin' in splunk_users"

  - name: enable boot-start
    shell: "{{splunk_home}}/bin/splunk enable boot-start -systemd-managed 1 --accept-license --answer-yes --no-prompt"
  - name: touch ui so it does not ask for the password to be changed
    file: 
      path: "{{splunk_home}}/etc/.ui_login"
      state: touch
      owner: "{{ splunk_user }}"
      group: "{{ splunk_group }}" 
  - name: Set SPLUNK_HOME
    template:
      src: etc/profile.d/splunk_home.sh.j2
      dest: /etc/profile.d/splunk_home.sh
      owner: "{{ splunk_user }}"
      group: "{{ splunk_group }}" 
      mode: 0644
  - name: restart splunk after initial install
    service:
      name: Splunkd
      state: restarted
  become: true
  when: splunk_path.stat.exists == false


